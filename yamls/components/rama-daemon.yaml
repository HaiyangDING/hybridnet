kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: rama-daemon
  namespace: kube-system
  annotations:
    kubernetes.io/description: |
      This daemon set launches the rama cni daemon.
spec:
  selector:
    matchLabels:
      app: rama-daemon
  template:
    metadata:
      labels:
        app: rama-daemon
    spec:
      tolerations:
        - operator: Exists
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      priorityClassName: system-cluster-critical
      serviceAccountName: rama
      hostNetwork: true
      hostPID: true
      initContainers:
        - name: install-cni
          image: "REGISTRY/rama-daemon:dev"
          imagePullPolicy: IfNotPresent
          command: ["/rama/install-cni.sh"]
          securityContext:
            runAsUser: 0
            privileged: true
          volumeMounts:
            - mountPath: /etc/cni/net.d
              name: cni-conf
            - mountPath: /opt/cni/bin
              name: cni-bin
      containers:
        - name: cni-daemon
          image: "REGISTRY/rama-daemon:dev"
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - /rama/start-daemon.sh
          args:
            - --prefer-interfaces=$NET_INTERFACE1,$NET_INTERFACE2
          securityContext:
            runAsUser: 0
            privileged: true
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          livenessProbe:
            httpGet:
              path: /live
              port: 11021
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
            failureThreshold: 1
          volumeMounts:
            - mountPath: /run/cni
              name: host-run-cni
            - mountPath: /lib/modules
              name: host-modules
            - mountPath: /run/xtables.lock
              name: xtables-lock
            - mountPath: /var/run/netns
              mountPropagation: HostToContainer
              name: host-var-run-netns
            - mountPath: /var/run/docker/netns
              mountPropagation: HostToContainer
              name: host-var-docker-netns
            - mountPath: /run/netns
              mountPropagation: HostToContainer
              name: host-run-netns
            - mountPath: /run/docker/netns
              mountPropagation: HostToContainer
              name: host-docker-netns
          # TODO: add liveness probe
      nodeSelector:
        kubernetes.io/os: "linux"
      volumes:
        - name: host-modules
          hostPath:
            path: /lib/modules
        - name: host-run-cni
          hostPath:
            path: /run/cni
        - name: cni-conf
          hostPath:
            path: /etc/cni/net.d
        - name: cni-bin
          hostPath:
            path: /opt/cni/bin
        - name: xtables-lock
          hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
        - name: host-run-netns
          hostPath:
            path: /run/netns
        - name: host-docker-netns
          hostPath:
            path: /run/docker/netns
        - name: host-var-run-netns
          hostPath:
            path: /var/run/netns
        - name: host-var-docker-netns
          hostPath:
            path: /var/run/docker/netns